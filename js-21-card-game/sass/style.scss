/*
font-family: 'Playfair Display', serif;
font-family: 'EB Garamond', serif;
font-family: 'Open Sans', sans-serif;
*/

$darkColor: rgb(34, 34, 34);
$lightColor: rgb(245, 245, 245);

* {
    box-sizing: border-box;;
    margin: 0;
    padding: 0;

    /* border: 1px solid gray; */
}

ul,
ol {
    padding-left: 20px;
}

ul li {
    list-style-type: circle;
}

b {
    font-weight: 600;
}

hr {
    margin: 10px auto;
    border: none;
    border-top: 1px solid lightgray;
}

body {
    font-family: 'Open Sans', sans-serif;
    min-width: 300px;
    background-color: $lightColor;
}

header {
    background-color: $darkColor;
    color: $lightColor;
    padding: 20px;
}

header a {
    color: gray;
}
a {
    color: $darkColor;
}



main {
    max-width: 350px;
    margin: 0;
    margin-left: auto;
    margin-right: auto;
    padding: 20px;
}

h1 {
    font-family: 'Playfair Display', serif;
    font-size: 3rem;
    text-align: center;
    margin-bottom: 10px;
}

h2 {
    font-family: 'EB Garamond', serif;
    font-weight: 700;
    margin: 20px 0 10px 0;
}

h3 {
    font-family: 'EB Garamond', serif;
    font-size: 1.3rem;
    text-transform: capitalize;
    margin: 10px 0;
}


// LAYOUT WRAPPERS

.wrapper-play-bet {
    display: flex;
    width: calc(50% + 37.5px);
    flex-direction: row;
    align-items: center;
    gap: 10px;
    justify-content: space-between;
}

.wrapper-hand-buttons {
    display: flex;
    flex-direction: row;
    align-items: center;
    gap: 10px;

    .hit {
        margin-left: auto;
    }
}

.wrapper-cards-total {
    display: flex;
    flex-direction: row;
    
    &.fade-out {
        transition: opacity 1s 2s;
        opacity: 0%;
    }

    .total {
        text-align: center;
        align-self: center;
    }
}


// BUTTONS

button.hit,
button.stay,
button.play {
    transform: scale(0%);

    padding: 5px 15px;
    border: none;
    border-radius: 3px;;
    background-color: $darkColor;
    
    color: $lightColor;
    font-family: inherit;
    text-transform: uppercase;
    font-size: 1rem;
    font-weight: bold;

    transition: all .3s;

    &.visible {
        transform: scale(100%);
    }
}


// SUIT ICONS

.suit-icons {
    text-align: center;
}
.suit-icons.wait-animation span {
    display: inline-block;
    animation: wait-animation normal 2.7s;
}
.suit-icons.wait-animation span:nth-child(3) { animation-delay: .1s }
.suit-icons.wait-animation span:nth-child(2) { animation-delay: .2s }
.suit-icons.wait-animation span:nth-child(1) { animation-delay: .3s }

@keyframes wait-animation {
    0% { transform: translate(0px, 0px); }
    25% { transform: translate(10px, -10px) scale(110%); color: inherit;}
    50% { transform: translate(20px, 0px) scale(130%); color: rgb(201, 39, 39)}
    75% { transform: translate(10px, 10px) scale(110%); color: inherit;}
    100% { transform: translate(0px, 0px); }
}


// CARDS

.cards {
    position: relative;
    width: 100%;
    height: 125px;
    
    .card-image {
        position: absolute;
        top: 0;
        left: 0;
        width: 75px;
        border-radius: 3px;
        box-shadow: 0px 0px 2px rgba(0, 0, 0, .5);
    }
}

@mixin add-card-animation-mixin($i) {
    animation: #{add-card-animation- + ($i + 1)} .5s ease-out;

    @keyframes #{add-card-animation- + ($i + 1)} {
        from {
            // transform: rotate(0) scale(0);
            transform: rotate(0) translateY(-50px);
            opacity: 0;
        }
        to {
            // transform: rotate(-10deg + ($i * 5)) scale(1);
            transform: rotate(-10deg + ($i * 5)) translateY(0px);
            opacity: 1;
        }
    }
}

@for $i from 0 to 7 {
    .card-image:nth-child(#{$i + 1}) {
        left: $i * 30px;
        @include add-card-animation-mixin($i);
        animation-fill-mode: forwards;
    }
}


// HEADER ANIMATION

@mixin header-animation-mixin($i) {
    animation: #{header-animation- + $i} 1s linear 1s + (.1s * $i);
    @keyframes #{header-animation- + $i} {
        0% {}
        50% {font-colo: white; text-shadow: 0 0 5px white}
        100% {}
    }
}

h1.highlight-animation {
    @for $i from 1 to 10 {
        span:nth-child(#{$i}) {
            @include header-animation-mixin($i);
        }
    }
}
